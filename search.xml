<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[如果你穷，一定要看这片文章]]></title>
    <url>%2F2018%2F01%2F31%2F205443%2F</url>
    <content type="text"><![CDATA[那些生活充满选择的人，去嘲笑平庸者安于平庸，其实缺乏了对贫穷者的怜悯。如果位置互换，他们可能比你更加出色。 这世上，很多有钱人，更多穷人。没人喜欢穷，所以总想找到自己穷的原因。​ ​很多人会给你很有说服力的“理由”，比如说：​ ​你穷，是因为你太懒了，而别人很勤奋。​ ​你穷，是因为你智商和能力都不行。​ ​你穷，是因为你没有关系，家庭背景又不好。 ​。。。。。。​ ​可在我看来，这些理由都不够有说服力。我们的身边充斥着勤奋的穷人和有能力的穷人。即便那些有关系有背景的人，也可能很穷，否则也不会有“富不过三代”的说法了。​​很显然，穷的背后，还有更本质的原因。没理解这一点，可能一辈子都没法摆脱穷的命运。 ​真正的答案，可能让你觉得荒谬：你穷，最主要的原因是你，以及你的上一代穷。​ ​也就是说，贫穷正是产生贫穷最大的原因。​​看上去似乎是个逻辑谬误，实际上这个结论是很多经济学家认真研究后得到的结果。在真正理解它之前，先来看下面的一个故事：​​你可能认识一个富二代，大学毕业后出来创业，结果失败了。后来换了一个方向，再次创业，又失败了。富二代很有追求，屡败屡战，第三次创业终于成功了，身家还超过了他爹。这三次创业，除了每次创业他爹给过一百万的启动资金外，再没其他额外帮助。所以富二代说，我成功主要是因为自己，而不是靠关系。​​好了，故事看完了，你看到了什么呢？​ ​一个优渥的家庭，为什么更容易诞生成功者？如果用一句话来总结，是这样的： ​它能给你再来一次的勇气、空间以及机会。​ ​而这，正是是否能变得有钱至关重要，甚至可以说是最重要的因素。​ ​现在社会上流行批判穷人，把他们称之为失败者，说他们懒、不上进、不学习，没有勇气去追求事业。虽然有些道理，却有站着说话不腰疼的嫌疑。​​懒惰并不是贫穷的本质原因，很多勤奋的人同样很穷。每天五点起床的环卫工人，全年无休的农民，天天工作十五六个小时的流水线工人，任何一个都不比你懒，但他们都很穷。因为他们处在利益分配链的底层，而且根本没能力跳出去。​​这不仅仅是能力、学历的问题。某种意义说，写字楼里的白领看似日子过得光鲜，可在高房价背景下，出境比上述人群并不好到哪里去。这些所谓的“中层”，同样买不起房，仅仅满足温饱而已。而他们，同样跳不出这个圈层。​​因为，他们都没有再来一次的空间以及机会。​ ​比如，你可以说，你应该不顾一切地去学习，提高自己的能力，才能迎来机会。可是对很多社会底层的人来说，每天要拼尽全力工作十几个小时，才能勉强养家糊口。下班回到家里，已经累到话都说不出来，这时候你还来谈学习？​ ​你也可以说，应该牢牢把握机会，去创业。只要成功了，就可以跳出原来的圈层了。可是对有家有室，甚至肩负沉重房贷的工薪阶层来说，创业失败的后果可能就是家破人亡，又怎么敢轻易行动？​ ​贫穷就像一把刀，扼杀了贫穷者生命中大部分的可能性。可能性没了，他们只能继续贫穷下去，恶性循环。​​所以有人才会注意到：越处于社会底层的人，越追求稳定。​​不是说，他们就没有勇气和追求。而是因为他们抵御风险的能力非常低，大部分人其实根本没有再来一次的机会，只能逼得自己没有勇气。​ ​确实，我们看到不少原本一贫如洗，白手起家，成功后变得有钱的例子。但我们没看到的是：所有白手起家的人，几乎都搏上了自己的所有。只有每一次都搏对的人，才能笑到最后。哪怕任何一次走错，结果便是万劫不复。​ ​因为穷人根本没有再来一次的机会。前面要么是成功，要么就可能一辈子都活得比原来更差。极少数成功者在金字塔顶尖笑得灿烂，下面是你看不到的尸骨累累。​​所以，我一直认为追求安稳并不是错，只是一种选择，一种无奈。那些生活充满选择的人，去嘲笑平庸者安于平庸，其实缺乏了对贫穷者的怜悯。如果位置互换，他们可能比你更加出色。​​如果你现在还不富有，要牢牢记住下面的几点：​​1、要想突破穷的桎梏，最重要的是你得有勇气，突破贫穷带给你的恐惧感。在真正机会来临的时候，你才敢去尝试。​ ​2、穷的时候，千万别贪图享受，别追求生活品质。省吃俭用，能存钱就多存钱。很有可能，这些看似不多的储蓄，就能给你再来一次的机会。​ ​3、想尽一切办法多做积累，或许工作很累，但你可以减少社交、娱乐的时间，即使每天只能学习半个小时，也要坚持去做。因为你可能人生就一次逆袭的机会，失去了，就彻底没有了。​ ​4、即使自己不能变成有钱人，也要做好上述事情，这样你的下一辈才有机会。致富不是一场百米跑，而可能是场接力赛。现在你看到的有钱人，很多也是他们上一辈子努力的结果。​ ​幸运的是，时代在进步，事情在好转。比如说，至少现在只要我们能找到一份还不错的工作，只需要工作8小时，就有一份能养活自己还能存点钱的工作。这意味着，每天我们最少还有十几个小时去谋划自己的未来。​​改变的关键，就在于你如何用好自己工作之外的时间。至少，我们已经比以前的人好多了。别忘了，很多时候，大部分人需要整天整天的工作，只是为了勉强能活下去而已！ 转载https://weibo.com/ttarticle/p/show?id=2309404127715342086565关于作者：阿何，清华大学理工男，职场充电宝&amp;唯库创始人，感性理性兼备的写作者，国内知名个人成长研究者，个人公众号：阿何有话说（ID：aheshiwo）。]]></content>
      <categories>
        <category>现实篇</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hexo常用命令]]></title>
    <url>%2F2018%2F01%2F28%2F185959%2F</url>
    <content type="text"><![CDATA[由于很懒没有经常更新博客的习惯，想写东西时连Hexo常用的命令都记不起来，为了不时之需把常用的命令总结下来，省去临时问度娘的麻烦！ Hexonpm install hexo -g #安装npm update hexo -g #升级hexo init #初始化 新建Hexo 使用 new 指令来新建文章、草稿和页面这三种默认 layout 布局。其中 layout 是可选参数，默认值为 post。用户可以通过布局模板来修改或增加。语法： hexo new 布局 &quot;文章名&quot; 写作hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章hexo p == hexo publish [layout] &lt;title&gt; #发表草稿 服务器Hexo 3.0 把服务器独立成了个别模块，您必须先安装才能使用。npm install hexo-server --save #安装服务hexo s == hexo server #启动服务(预览)hexo server -p 5000 #更改端口hexo s -i 192.168.1.1 #自定义iphexo clean #清除缓存 部署hexo g == hexo generate #生成静态文件hexo d == hexo deploy#部署 参考https://www.cnblogs.com/zuoruining/p/hexo-chang-yong-ming-ling.html]]></content>
      <categories>
        <category>职业篇</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Makedown常用语法详解]]></title>
    <url>%2F2018%2F01%2F28%2F112513%2F</url>
    <content type="text"><![CDATA[写博客需要用到Makedown语法，正好拿来练手作为自己的第一篇博客，下面是它的一些基本用法. 标题Setext 形式是使用底线=为最高阶标题， - 为第二阶标题，任何数量的 = 和 - 都有效。例： 一级标题 ==================== 二级标题 -------------------- 显示效果： Atx 形式在行首插入 1 到 6 个 # ，对应到标题 1 到 6 阶例： # 标题 ## 标题 ### 标题 #### 标题 ##### 标题 ###### 标题 显示效果： 区块引用区块引用是使用类似 email 中用 > 的引用方式.例： &gt; 引用 &gt; 多行引用 &gt;&gt; 嵌套引用 &gt;&gt; 嵌套引用 显示效果： 引用多行引用 嵌套引用嵌套引用 列表无序列无序列表使用星号、加号和减号来做为列表的项目标记，这些符号是都可以使用的。例： * Candy. * Gum. * Booze. 显示效果： Candy. Gum. Booze. 有序列有序的列表则是使用一般的数字接着一个英文句点作为项目标记。例： 1. Red 2. Green 3. Blue 显示效果： Red Green Blue 分隔线用三个以上的星号、减号、底线来建立一个分隔线，下面每种写法都可以建立分隔线。例： ----- _____ 显示效果： 强调使用星号 * 和底线 _ 作为标记强调字词的符号，用两个 * 或 _ 包起来为加粗，单个 * 或 _ 包起来为加斜体。例： 显示效果：加粗斜体加粗斜体 代码行内代码标记一段行内代码,可以用反引号 ` 把它包起来，用多个反引号来开启和结束代码区段。 Use the `printf()` function. `There is a literal` 显示效果： Use the printf() function. There is a literal 区块代码每行一阶的缩进（4 个空格或是 1 个制表符）。例： 显示效果： &lt;div class=&quot;footer&quot;&gt; &amp;copy; 2004 Foo Corporation &lt;/div&gt; 连接支持两种形式的连接语法: 行内式和参考式 链接字符不区分大小写。 行内式链接文字都是用方括号来标记，紧接着圆括号并插入网址链接即可，如加链接的title文字需用双引号包起来。例： This is [an example](http://example.com/ &quot;Title&quot;) inline link. 显示效果：This is an example inline link. 参考式在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记,在文件的任意处，你可以把这个标记的链接内容定义出来,title可以用双引、单引或小括号。例： This is [an example] [id] reference-style link. [id]: http://example.com/ &quot;Optional Title Here&quot; 显示效果： This is an example reference-style link. 自动链接比较简短的自动链接形式只要是用尖括号包起来， 就会自动把它转成链接。例： &lt;http://blog.csdn.net&gt; 显示效果：http://blog.csdn.net 图片标记图片的语法跟链接很相似，同样有行内式和参考式两种。语法中图片Alt的意思是如果图片因为某些原因不能显示，就用定义的图片Alt文字来代替图片。 图片Title则和链接中的Title一样，表示鼠标悬停与图片上时出现的文字。 Alt 和 Title 都不是必须的，可以省略。 行内式例： ![Alt 卡通](http://i.imgur.com/ClvJhgH.jpg) 显示效果： 参考式例： ![Alt 卡通][id] [id]: http://i.imgur.com/FbFkGJF.jpg &quot;Optional title attribute&quot; 显示效果： 转义利用反斜杠来插入一些在语法中有其它意义的符号，Markdown支持以下这些符号前面加上反斜杠来帮助插入普通的符号。 \ 反斜线 ` 反引号 * 星号 _ 底线 {} 花括号 [] 方括号 () 括弧 # 井字号 + 加号 - 减号 . 英文句点 ! 惊叹号 参考http://www.appinn.com/markdown/#blockquote]]></content>
      <categories>
        <category>职业篇</category>
      </categories>
      <tags>
        <tag>Makedown</tag>
      </tags>
  </entry>
</search>
